---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alexpetertyler.
--- DateTime: 2022/3/4 11:45
---
-- batchInsertScript GoodsCacheService
local key = KEYS[1]
local seckillGoodsList = {}
for index, value in ipairs(ARGV) do
    local seckillGoods = cjson.decode(value)
    local count = tonumber(redis.call('SETNX', key .. seckillGoods['goodsId'], value))
    if count == 0 then
        table.insert(seckillGoodsList, seckillGoods)
    end
end
if table.maxn(seckillGoodsList) == 0 then
    return nil
else
    return cjson.encode(seckillGoodsList)
end

-- canalSyncScript GoodsCacheService
local key = KEYS[1]
for index, value in ipairs(ARGV) do
    local redisCommand = cjson.decode(value)
    local seckillGoods = redisCommand['value']
    key = '"' .. string.gsub(key, '"', '') .. seckillGoods['goodsId'] .. '"'
    if redisCommand['command'] == 'SET' then
        seckillGoods['@type'] = 'com.waibao.seckill.entity.SeckillGoods'
        redis.call('SET', key, cjson.encode(seckillGoods))
    else
        redis.call('DEL', key)
    end
end

-- batchInsertScript GoodsRetailerCacheService
local key = KEYS[1]
local seckillGoodsList = {}
for index, value in ipairs(ARGV) do
    local seckillGoods = cjson.decode(value)
    local count = tonumber(redis.call('SETNX', key .. seckillGoods['retailerId'], value))
    if count == 0 then
        table.insert(seckillGoodsList, seckillGoods)
    end
end
if table.maxn(seckillGoodsList) == 0 then
    return nil
else
    return cjson.encode(seckillGoodsList)
end

-- canalSyncScript GoodsRetailerCacheService
local key = KEYS[1]
for index, value in ipairs(ARGV) do
    local redisCommand = cjson.decode(value)
    local seckillGoods = redisCommand['value']
    key = '"' .. string.gsub(key, '"', '') .. seckillGoods['retailerId'] .. '"'
    if redisCommand['command'] == 'SET' then
        seckillGoods['@type'] = 'com.waibao.seckill.entity.SeckillGoods'
        redis.call('SET', key, cjson.encode(seckillGoods))
    else
        redis.call('DEL', key)
    end
end

-- batchInsertScript GoodsStorageCacheService
local key = KEYS[1]
local seckillGoodsList = {}
for index, value in ipairs(ARGV) do
    local seckillGoods = cjson.decode(value)
    local count = tonumber(redis.call('SETNX', key .. seckillGoods['goodsId'], seckillGoods['storage']))
    if count == 0 then
        table.insert(seckillGoodsList, seckillGoods)
    end
end
if table.maxn(seckillGoodsList) == 0 then
    return nil
else
    return cjson.encode(seckillGoodsList)
end

-- batchIncreaseScript GoodsStorageCacheService
local key = KEYS[1]
local orderVOList = {}
for index, value in ipairs(ARGV) do
    local orderVO = cjson.decode(value)
    local count = orderVO['count']
    key = '"' .. string.gsub(key, '"', '') .. orderVO['goodsId'] .. '"'
    if redis.call('GET', key) then
        table.insert(orderVOList, value)
    else
        redis.call('INCRBY', key, count)
    end
end
if table.maxn(orderVOList) == 0 then
    return nil
else
    return cjson.encode(orderVOList)
end

-- canalSyncScript GoodsStorageCacheService
local key = KEYS[1]
for index, value in ipairs(ARGV) do
    local redisCommand = cjson.decode(value)
    local seckillGoods = redisCommand['value']
    key = '"' .. string.gsub(key, '"', '') .. seckillGoods['goodsId'] .. '"'
    if redisCommand['command'] == 'SET' then
        seckillGoods['@type'] = 'com.waibao.seckill.entity.SeckillGoods'
        redis.call('SET', key, seckillGoods['storage'])
    else
        redis.call('DEL', key)
    end
end

-- decreaseScript PurchasedUserCacheService
local key = KEYS[1]
local orderVOList = {}
for index, value in ipairs(ARGV) do
    local orderVO = cjson.decode(value)
    key = '"' .. string.gsub(key, '"', '') .. orderVO['userId'] .. '"'
    local count = tonumber(redis.call('DECR', key))
    if count < 0 then
        redis.call('SET', key, 0)
        table.insert(orderVOList, orderVO)
    end
end
if table.maxn(orderVOList) == 0 then
    return nil
else
    return cjson.encode(orderVOList)
end

--test
local value = ARGV[1]
local redisCommand = cjson.decode(value)
local orderVO = redisCommand['value']
orderVO['@type'] = 'com.waibao.seckill.entity.SeckillGoods'
return cjson.encode(orderVO)

--{"command":"SET","timestamp":1646396955989,"value":{"goodsId":2,"id":2,"purchaseLimit":1,"retailerId":22,"seckillEndTime":1646396599000,"seckillStartTime":1646396597000,"storage":13100}}